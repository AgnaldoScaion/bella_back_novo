DROP DATABASE IF EXISTS bella_avventura;
CREATE DATABASE bella_avventura;
USE bella_avventura;

CREATE TABLE sessions (
    id VARCHAR(255) PRIMARY KEY,
    user_id INT UNSIGNED NULL,
    ip_address VARCHAR(45) NULL,
    user_agent TEXT NULL,
    payload TEXT NOT NULL,
    last_activity INT NOT NULL
);

CREATE TABLE usuario (
    id_usuario INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome_completo VARCHAR(100),
    data_nascimento DATE,
    CPF VARCHAR(20) UNIQUE,
    email VARCHAR(100) UNIQUE,
    password VARCHAR(255),
    nome_perfil VARCHAR(50),
    created_at TIMESTAMP NULL,
    updated_at TIMESTAMP NULL
);

CREATE TABLE hotel (
    id_hotel INT PRIMARY KEY AUTO_INCREMENT,
    nome_hotel VARCHAR(50),
    estado VARCHAR(50),
    cidade VARCHAR(50),
    bairro VARCHAR(50),
    rua VARCHAR(100),
    numero INT,
    telefone VARCHAR(20),
    horario_funcionamento VARCHAR(100),
    sobre VARCHAR(255)
);

CREATE TABLE api (
    id_api INT PRIMARY KEY AUTO_INCREMENT,
    FK_usuario_id_usuario INT UNSIGNED,
    FK_HOTEL_id_hotel INT,
    FOREIGN KEY (FK_usuario_id_usuario) REFERENCES usuario(id_usuario) ON DELETE RESTRICT,
    FOREIGN KEY (FK_HOTEL_id_hotel) REFERENCES hotel(id_hotel) ON DELETE CASCADE
);

CREATE TABLE restaurante (
    id_restaurante INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100),
    telefone VARCHAR(20),
    estado VARCHAR(50),
    cidade VARCHAR(50),
    rua VARCHAR(100),
    bairro VARCHAR(50),
    numero INT,
    horario_funcionamento VARCHAR(100),
    sobre VARCHAR(255)
);

CREATE TABLE ponto_turistico (
    id_ponto_turistico INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100),
    sobre VARCHAR(255),
    numero INT,
    rua VARCHAR(100),
    bairro VARCHAR(50),
    cidade VARCHAR(50),
    estado VARCHAR(50)
);

CREATE TABLE feedbacks (
    id_feedback INT PRIMARY KEY AUTO_INCREMENT,
    id_usuario INT UNSIGNED,
    feedback VARCHAR(255),
    estrelas VARCHAR(5),
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE
);

CREATE TABLE viagem (
    id_viagem INT PRIMARY KEY AUTO_INCREMENT,
    destino VARCHAR(100),
    descricao VARCHAR(255),
    fk_usuario_id_usuario INT UNSIGNED,
    FOREIGN KEY (fk_usuario_id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE
);

CREATE TABLE adm (
    id_adm INT PRIMARY KEY AUTO_INCREMENT,
    nome_completo VARCHAR(100),
    data_nascimento DATE,
    CPF VARCHAR(20),
    email VARCHAR(100),
    password VARCHAR(255),
    nome_perfil VARCHAR(50),
    fk_usuario_id_usuario INT UNSIGNED,
    FOREIGN KEY (fk_usuario_id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE
);

CREATE TABLE pontos (
    id_pontos INT PRIMARY KEY AUTO_INCREMENT,
    quantidade VARCHAR(10),
    nome VARCHAR(100),
    descricao VARCHAR(255),
    localizacao VARCHAR(100),
    fk_usuario_id_usuario INT UNSIGNED,
    FOREIGN KEY (fk_usuario_id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE
);